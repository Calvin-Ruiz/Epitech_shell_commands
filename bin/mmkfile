#!/bin/bash
echo -e -n "##
## EPITECH PROJECT, 2019
## $(get_highest_level $PWD)
## File description:
## Makefile
##

NAME = $1

FILES = " > "Makefile"
tree -i -f "." | cat | grep "\.c$" | grep -v "bonus/"| sed -z "s/\n/ @£/g" | sed "s/ @£$//g" | tr "@" "\\" | sed -z "s/£/\n	/g" | sed "s/\.\///g" >> "Makefile"
echo -e "

INCLUDES = $(tree -if '.' | grep "include$" | grep -v "bonus" | sed "s/\.\//-I /g" | tr "\n" " ")

FLAGS = $2

all:	\$(NAME)

\$(NAME):
	gcc -o \$(NAME) \$(FILES) \$(FLAGS) \$(INCLUDES)

fast:
	gcc -Ofast -o \$(NAME) \$(FILES) \$(FLAGS) \$(INCLUDES)

clean:
	rm -f *.o
	rm -f *# *~ ./*/*# ./*/*~ ./*/*/*# ./*/*/*~ vgcore*

fclean:	clean
	rm -f \$(NAME)

full:	update
	make re

fulld:	update
	make debug

re:	fclean all

prepush:	fclean
	git add --all
	git status

tree:	prepush
	tree -a -I .git

push:	prepush
	git commit -m 'auto-sync with master'
	git push origin master

pull:
	git pull origin master

sync:	pull	push

debug:
	clear
	gcc -g3 -o \$(NAME) \$(FILES) -Wall -Wextra \$(FLAGS) \$(INCLUDES)

valgrind:
	clear
	gcc -g3 -o \$(NAME) \$(FILES) \$(FLAGS) \$(INCLUDES)

update:
	mmkfile \$(NAME) \"\$(FLAGS)\"" >> Makefile
echo "Makefile created"
